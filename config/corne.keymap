/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/rgb.h>

//#define QWERTY   0
//#define SPCNAV   1
//#define ENTNUM   2
//#define GFN      3

/ {
	behaviors {
        hm: homerow_mods {
			compatible = "zmk,behavior-hold-tap";
			label = "homerow mods";
			#binding-cells = <2>;
			tapping_term_ms = <200>;
            flavor = "tap-preferred";
			bindings = <&kp>, <&kp>;
        };
   	 };
};


/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &none   &kp Q       &kp W       &kp E       &kp R       &kp T                               &kp Y       &kp U       &kp I       &kp O       &kp P           &none
                &none   &hm LCTRL A &hm LALT S  &hm LGUI D  &hm LSHFT F &lt 3 G                             &kp H       &hm LSHFT J &hm LGUI K  &hm LALT L  &hm LCTRL SEMI  &none
                &none   &kp Z       &kp X       &kp C       &kp V       &lt 4 B                             &kp N       &kp M       &kp COMMA   &kp DOT     &kp FSLH        &none
                                                            &none       &kp TAB &lt 2 SPACE     &lt 1 SPACE &kp BSPC    &kp RET
            >;
        };

        lower_layer {
            bindings = <
                &none   &kp ESC     &none       &none       &none       &none                       &kp BSLH    &kp SQT     &kp LBKT    &kp RBKT    &kp GRAVE   &none
                &none   &kp LCTRL   &kp LALT    &kp LGUI    &kp LSHFT   &none                       &kp LEFT    &kp DOWN    &kp UP      &kp RIGHT   &kp RET     &none
                &none   &none       &none       &none       &none       &none                       &kp HOME    &kp PG_DN   &kp PG_UP   &kp END     &kp DEL     &none
                                                            &trans      &trans  &trans      &trans  &trans      &trans
            >;
        };

        raise_layer {
            bindings = <
                &none  &kp N1       &kp N2          &kp N3          &kp N4      &kp N5                          &kp N6      &kp N7      &kp N8      &kp N9      &kp N0      &none
                &none  &kp LCTRL    &kp LALT        &kp LGUI        &kp LSHFT   &none                           &none       &kp LSHFT   &kp LGUI    &kp LALT    &kp LCTRL   &none
                &none  &kp C_PREV   &kp C_VOL_DN    &kp C_VOL_UP    &kp C_NEXT  &kp C_PP                        &kp MINUS   &kp EQUAL   &none       &kp DOT     &none       &none
                                                                    &trans      &trans      &trans      &trans  &trans      &trans
            >;
        };

        lowers_layer {
            bindings = <
                &none  &kp F1       &kp F2      &kp F3      &kp F4      &kp F5                      &kp F6  &kp F7      &kp F8      &kp F9      &kp F10     &none
                &none  &kp LCTRL    &kp LALT    &kp LGUI    &kp LSHFT   &none                       &none   &kp LSHFT   &kp LGUI    &kp LALT    &kp LCTRL   &none
                &none  &none        &none       &none       &none       &none                       &kp F11 &kp F12     &none       &none       &none       &none
                                                            &trans      &trans  &trans      &trans  &trans  &trans
            >;
        };

        bluetooth_layer {
            bindings = <
                &none  &bt BT_SEL 0     &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4                        &none   &none   &none   &none   &none           &none
                &none  &rgb_ug RGB_HUI  &rgb_ug RGB_TOG &none           &none           &none                               &none   &none   &none   &none   &rgb_ug RGB_TOG &none
                &none  &rgb_ug RGB_HUD  &bt BT_CLR      &none           &none           &none                               &none   &none   &none   &none   &none           &none
                                                                        &trans          &trans          &trans      &trans  &trans  &trans
            >;
        };
    };
};
